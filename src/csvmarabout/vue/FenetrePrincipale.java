/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package csvmarabout.vue;

import au.com.bytecode.opencsv.CSVWriter;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import csvmarabout.CSV;

/**
 *
 * @author clem
 */
public class FenetrePrincipale extends javax.swing.JFrame {

    CSV csv;
    CSV csvAppercut;
    JFileChooser jfc;
    private static FenetrePrincipale instance;

    /**
     * Creates new form FenetrePrincipale
     */
    private FenetrePrincipale() {

        initComponents();


    }

    public static FenetrePrincipale getInstance() {
        if (instance == null) {
            instance = new FenetrePrincipale();
        }

        return instance;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CsvMarabout");

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel2.setPreferredSize(new java.awt.Dimension(676, 300));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 876, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 323, Short.MAX_VALUE)
        );

        jSplitPane1.setBottomComponent(jPanel2);

        jPanel1.setPreferredSize(new java.awt.Dimension(876, 200));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 876, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Ouvrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Enregistrer CSV traité");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem2.setText("Appercut");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed


        csv = new CSV();
        if (jfc == null) {
            jfc = new JFileChooser();
        }



        jfc.showDialog(this, "ok");
        jfc.setVisible(true);
        if (jfc.getSelectedFile() != null) {


            String fichier = jfc.getSelectedFile().getAbsolutePath();

            CSVConf cSVConf = new CSVConf();

            //On utilise une dialogue pour configurer les séparateur et autres

            CsvDialogOption csvDialogOption = new CsvDialogOption(cSVConf, true);
            csvDialogOption.setCsvModel(csv);
            csvDialogOption.setVisible(true);


            this.setTitle(jfc.getSelectedFile().getName());

            csv.setFichier(fichier);
//        csv.setSeparateur(';');
//        csv.setDelimiteurChamp('\"');

            try {
                csv.lireFIchier();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(FenetrePrincipale.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(FenetrePrincipale.class.getName()).log(Level.SEVERE, null, ex);
            }


            // affichage des enetre
            int i;
            for (i = 0; i < csv.getEntete().length; i++) {
                System.out.println(csv.getEntete()[i]);

            }


            ZModel model = new ZModel(csv.getContent(), csv.getEntete());

//        JTable newTab = new JTable(csv.getContent(), csv.getEntete());
            JTable newTab = new JTable(model);


            EditorCompoClem compoClem = new EditorCompoClem(new JTextField("blabla"));

            newTab.setDefaultEditor(JComboBox.class, compoClem);



            TableComponentRender componentRender = new TableComponentRender();
            newTab.setDefaultRenderer(JComboBox.class, componentRender);


            JScrollPane js = new JScrollPane(newTab);

            newTab.setMinimumSize(new Dimension(1024, 700));


            jPanel1.removeAll();
            jPanel1.setLayout(new BorderLayout());
            jPanel1.add(js);
            this.setVisible(true);
//        
        }

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:

        // On copi le csv

        try {
            csvAppercut = (CSV) csv.clone();

            //recup des traitement;

            csvAppercut.appliTraitement();


            JTable newTab = new JTable(csvAppercut.getContent(), csvAppercut.getEntete());
            JScrollPane js = new JScrollPane(newTab);
            newTab.setMinimumSize(new Dimension(1024, 700));


//        jPanel1.setLayout(new HorizBagLayout());
            jPanel2.setLayout(new BorderLayout());
            jPanel2.removeAll();
            jPanel2.add(js);

            this.setVisible(true);

        } catch (CloneNotSupportedException ex) {
            Logger.getLogger(FenetrePrincipale.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * *
     * Action enregistrement
     *
     * @param evt
     */
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
            int i;
            int j;
            List<String[]> resuEnregistre = new ArrayList<>();

            // Utilisation du jFileChooser pour la destination d'enregistrement
            if (jfc == null) {
                jfc = new JFileChooser();
            }
            jfc.showDialog(this, "ok");
            jfc.setVisible(true);

            if (jfc.getSelectedFile() != null) {
                String fichierdestination = jfc.getSelectedFile().getAbsolutePath();

                CsvDialogOption csvDialogOption = new CsvDialogOption(this, true);
                csvDialogOption.setCsvModel(csvAppercut);
                csvDialogOption.reloadFromModel();
                csvDialogOption.setVisible(true);
     
                
                csvAppercut.writetoFile(fichierdestination);
//                CSVWriter cSVWriter = new CSVWriter(new FileWriter(fichierdestination), csvAppercut.getSeparateur(), csvAppercut.getDelimiteurChamp(), csvAppercut.getEchapement());
//                CSVWriter cSVWriter = new CSVWriter(new FileWriter(fichierdestination), csvAppercut.getSeparateur(), csvAppercut.getDelimiteurChamp());
//                
//                
//
//                // enregistrement de l'entete
//                if (csvAppercut.getEnteteDsPremiereLigne()) {
//                    resuEnregistre.add(csvAppercut.getEntete());
//                }
//
//                for (i = 0; i < csvAppercut.getContent().length; i++) {
//                    String[] ligne = new String[csvAppercut.getEntete().length];
//                    for (j = 0; j < csvAppercut.getEntete().length; j++) {
//                        ligne[j] = (String) csvAppercut.getContent()[i][j];
//                    }
//                    resuEnregistre.add(ligne);
//                }
//                cSVWriter.writeAll(resuEnregistre);
//                cSVWriter.close();

            }
        }
        catch (IOException ex) {
            Logger.getLogger(FenetrePrincipale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    public CSV getCsv() {
        return csv;
    }

    public void setCsv(CSV csv) {
        this.csv = csv;
    }

    public CSV getCsvAppercut() {
        return csvAppercut;
    }

    public void setCsvAppercut(CSV csvAppercut) {
        this.csvAppercut = csvAppercut;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenetrePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenetrePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenetrePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenetrePrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FenetrePrincipale().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSplitPane jSplitPane1;
    // End of variables declaration//GEN-END:variables
}
